openapi: 3.0.3
info:
  title: Bank Account API
  version: 1.0.0
servers:
  - url: https://bank-api.app-meyers.be
tags:
  - name: transaction
    description: transaction
paths:
  /transaction/overview:
    get:
      tags:
        - transaction
      operationId: getOverview
      summary: get overview of the last months
      responses:
        200:
          description: Request successfully processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionOverviewResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    post:
      tags:
        - transaction
      operationId: queryOverview
      summary: get overview by query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionQueryOverviewRequest'
      responses:
        200:
          description: Request successfully processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionQueryOverviewResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /transaction/stats/{month}:
    get:
      tags:
        - transaction
      operationId: getStats
      summary: Get stats of specific month
      parameters:
        - in: path
          name: month
          schema:
            type: string
            format: date
            example: 2024-05-16
          description: ISO 8601 format date
          required: true
      responses:
        200:
          description: Request successfully processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatsResponse'
  /transaction/tag:
    post:
      tags:
        - transaction
      operationId: assignTag
      summary: Assign tag to transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssignTransactionRequest'
      responses:
        204:
          description: Request successfully processed
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
components:
  schemas:
    TransactionOverviewResponse:
      type: object
      required:
        - datasets
        - labels
      properties:
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/TransactionOverviewDatasetResponse'
        labels:
          type: array
          items:
            type: string
    TransactionOverviewDatasetResponse:
      type: object
      required:
        - data
        - label
        - backgroundColor
        - borderColor
        - pointBackgroundColor
        - pointBorderColor
        - pointHoverBackgroundColor
        - pointHoverBorderColor
        - fill
      properties:
        data:
          type: array
          items:
            type: number
            format: double
        label:
          type: string
          example: Income
        backgroundColor:
          type: string
          example: rgba(86,201,103,0.2)
        borderColor:
          type: string
          example: rgba(86,201,103,1)
        pointBackgroundColor:
          type: string
          example: rgba(86,201,103,1)
        pointBorderColor:
          type: string
          example: #fff
        pointHoverBackgroundColor:
          type: string
          example: #fff
        pointHoverBorderColor:
          type: string
          example: rgba(86,201,103,1)
        fill:
          type: string
          example: origin
    TransactionQueryOverviewRequest:
      required:
        - page
        - size
        - search
        - tags
        - year
      type: object
      properties:
        page:
          type: integer
          example: 2
        size:
          type: integer
          example: 50
        search:
          type: string
          example: KBC
        tags:
          type: array
          items:
            type: string
            example: public transport
        year:
          type: array
          items:
            type: integer
    TransactionQueryOverviewResponse:
      required:
        - totalAmount
        - data
        - first
        - last
        - previous
        - next
      type: object
      properties:
        totalAmount:
          type: number
          format: double
          example: 15.5
        data:
          type: array
          items:
            $ref: '#/components/schemas/TransactionDetailTableResponse'
        first:
          type: integer
          example: 0
        last:
          type: integer
          example: 4
        previous:
          type: integer
          example: 1
        next:
          type: integer
          example: 3
    TransactionStatsResponse:
      required:
        - incoming
        - outgoing
      type: object
      properties:
        incoming:
          type: array
          items:
            $ref: '#/components/schemas/TransactionDetailStatsResponse'
        outgoing:
          type: array
          items:
            $ref: '#/components/schemas/TransactionDetailStatsResponse'
    TagAssignTransactionRequest:
      required:
        - tagId
        - transactionId
      type: object
      properties:
        tagId:
          type: string
          format: uuid
          example: 80e09a56-c2b2-4e13-a990-3e337c9901ad
        transactionId:
          type: string
          format: uuid
          example: bbf0e6c2-f465-4e50-a5e6-44cbcfdc30cd
    TransactionDetailStatsResponse:
      required:
        - name
        - amount
        - currency
        - bookingDate
      type: object
      properties:
        name:
          type: string
          example: Nicholas Meyers
        amount:
          type: number
          format: double
          example: 14.3
        currency:
          type: string
          example: EUR
        bookingDate:
          type: string
          example: 10/10/2024
    TransactionDetailTableResponse:
      required:
        - id
        - name
        - amount
        - currency
        - bookingDate
        - tags
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: bbf0e6c2-f465-4e50-a5e6-44cbcfdc30cd
        name:
          type: string
          example: Nicholas Meyers
        amount:
          type: number
          format: double
          example: 14.3
        currency:
          type: string
          example: EUR
        bookingDate:
          type: string
          example: 10/10/2024
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TransactionTagResponse'
    TransactionTagResponse:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          example: bbf0e6c2-f465-4e50-a5e6-44cbcfdc30cd
        name:
          type: string
          example: public transport
    ProblemDetailResponse:
      required:
        - title
        - status
        - detail
        - instance
      properties:
        title:
          type: string
          description: A short, human-readable summary of the problem type
        status:
          type: integer
          description: The HTTP status code generated by the origin server for this occurrence of the problem
          example: 404
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem
          example: /transaction
